{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\miniproject\\\\fullstack\\\\src\\\\component\\\\profile\\\\profile.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './profile.css'; // Import CSS file for styling\nimport axios from 'axios'; // To handle image upload requests\n\nconst Profile = ({\n  user,\n  setUser\n}) => {\n  const [formData, setFormData] = useState({\n    firstName: (user === null || user === void 0 ? void 0 : user.firstName) || '',\n    email: (user === null || user === void 0 ? void 0 : user.email) || '',\n    password: '' // For password changes\n  });\n  const [imageFile, setImageFile] = useState(null); // State to store selected image preview\n  const [loading, setLoading] = useState(false); // State to manage loading\n  const [editing, setEditing] = useState(false); // For toggling edit mode\n  const defaultProfileImage = 'https://www.pphfoundation.ca/wp-content/uploads/2018/05/default-avatar.png';\n\n  // Get the token from localStorage\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Please log in to see your profile.\");\n  }\n\n  // Fetch user data on component mount\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/user/profile\", {\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        setUser(response.data.user);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, [setUser, token]);\n\n  // Handle input changes in the form\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle image changes\n  const handleImageChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(URL.createObjectURL(file));\n      setLoading(true); // Set loading to true when uploading\n\n      const formData = new FormData();\n      formData.append(\"profileImage\", file);\n      formData.append(\"userId\", user === null || user === void 0 ? void 0 : user._id); // Use optional chaining\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/user/uploadProfileImage\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Authorization\": `Bearer ${token}` // Include JWT token\n          }\n        });\n\n        // Update user state with the new profile image\n        setUser({\n          ...user,\n          profileImage: response.data.profileImage\n        });\n      } catch (error) {\n        console.error(\"Image upload failed:\", error);\n      } finally {\n        setLoading(false); // Reset loading state\n      }\n    }\n  };\n\n  // Handle form submission (to update profile details)\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Send updated profile data to the backend\n      const response = await axios.put(`http://localhost:5000/api/user/update`, {\n        firstName: formData.firstName,\n        email: formData.email,\n        password: formData.password ? formData.password : undefined,\n        // Only send password if it's changed\n        userId: user._id\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}` // Include JWT token\n        }\n      });\n\n      // Update the user object in the frontend state\n      setUser(response.data);\n      setEditing(false); // Exit edit mode after updating\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Build the full image URL if a profileImage is available\n  const profileImageUrl = (user === null || user === void 0 ? void 0 : user.profileImage) ? `http://localhost:5000/${user.profileImage}?t=${new Date().getTime()}` // Add timestamp to avoid caching issues\n  : imageFile || defaultProfileImage;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"User Profile\"), user ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, editing ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    className: \"profile-edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    value: formData.firstName,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: formData.email,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: formData.password,\n    onChange: handleInputChange,\n    placeholder: \"Enter new password (optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, loading ? 'Updating...' : 'Update Profile')) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Name: \", user.firstName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Email: \", user.email), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setEditing(true),\n    className: \"edit-profile-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Edit Profile\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-image1-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileImageUrl,\n    alt: \"Profile\",\n    className: \"profile-image1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image-upload\",\n    className: \"edit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Edit Profile Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image-upload\",\n    accept: \"image/*\",\n    onChange: handleImageChange,\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }))), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, \"Uploading image...\"), \" \") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-login-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Please log in to see your profile.\"));\n};\nexport default Profile;","map":{"version":3,"names":["React","useState","useEffect","axios","Profile","user","setUser","formData","setFormData","firstName","email","password","imageFile","setImageFile","loading","setLoading","editing","setEditing","defaultProfileImage","token","localStorage","getItem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fetchUserData","response","get","headers","data","error","console","handleInputChange","e","target","name","value","handleImageChange","file","files","URL","createObjectURL","FormData","append","_id","post","profileImage","handleFormSubmit","preventDefault","put","undefined","userId","profileImageUrl","Date","getTime","className","onSubmit","htmlFor","type","id","onChange","required","placeholder","disabled","onClick","src","alt","accept"],"sources":["D:/project/miniproject/fullstack/src/component/profile/profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './profile.css'; // Import CSS file for styling\r\nimport axios from 'axios'; // To handle image upload requests\r\n\r\nconst Profile = ({ user, setUser }) => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: user?.firstName || '',\r\n    email: user?.email || '',\r\n    password: '', // For password changes\r\n  });\r\n  const [imageFile, setImageFile] = useState(null); // State to store selected image preview\r\n  const [loading, setLoading] = useState(false); // State to manage loading\r\n  const [editing, setEditing] = useState(false); // For toggling edit mode\r\n  const defaultProfileImage = 'https://www.pphfoundation.ca/wp-content/uploads/2018/05/default-avatar.png';\r\n\r\n  // Get the token from localStorage\r\n  const token = localStorage.getItem(\"token\"); \r\n  if (!token) {\r\n    return <p>Please log in to see your profile.</p>;\r\n  }\r\n\r\n  // Fetch user data on component mount\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/user/profile\", {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n        });\r\n        setUser(response.data.user);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [setUser, token]);\r\n\r\n  // Handle input changes in the form\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle image changes\r\n  const handleImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImageFile(URL.createObjectURL(file));\r\n      setLoading(true); // Set loading to true when uploading\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"profileImage\", file);\r\n      formData.append(\"userId\", user?._id); // Use optional chaining\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/user/uploadProfileImage\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            \"Authorization\": `Bearer ${token}`, // Include JWT token\r\n          },\r\n        });\r\n\r\n        // Update user state with the new profile image\r\n        setUser({ ...user, profileImage: response.data.profileImage });\r\n      } catch (error) {\r\n        console.error(\"Image upload failed:\", error);\r\n      } finally {\r\n        setLoading(false); // Reset loading state\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle form submission (to update profile details)\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Send updated profile data to the backend\r\n      const response = await axios.put(\r\n        `http://localhost:5000/api/user/update`,\r\n        { \r\n          firstName: formData.firstName,\r\n          email: formData.email,\r\n          password: formData.password ? formData.password : undefined, // Only send password if it's changed\r\n          userId: user._id,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`, // Include JWT token\r\n          },\r\n        }\r\n      );\r\n\r\n      // Update the user object in the frontend state\r\n      setUser(response.data);\r\n      setEditing(false); // Exit edit mode after updating\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Build the full image URL if a profileImage is available\r\n  const profileImageUrl = user?.profileImage \r\n    ? `http://localhost:5000/${user.profileImage}?t=${new Date().getTime()}` // Add timestamp to avoid caching issues\r\n    : imageFile || defaultProfileImage;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1 className=\"profile-title\">User Profile</h1>\r\n      {user ? (\r\n        <div className=\"profile-info\">\r\n          {editing ? (\r\n            <form onSubmit={handleFormSubmit} className=\"profile-edit-form\">\r\n              {/* Edit form for user details */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  value={formData.firstName}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter new password (optional)\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                {loading ? 'Updating...' : 'Update Profile'}\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"profile-details\">\r\n              <p className=\"profile-name\">Name: {user.firstName}</p>\r\n              <p className=\"profile-email\">Email: {user.email}</p>\r\n              <button onClick={() => setEditing(true)} className=\"edit-profile-btn\">\r\n                Edit Profile\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div className=\"profile-image1-section\">\r\n            <img\r\n              src={profileImageUrl}\r\n              alt=\"Profile\"\r\n              className=\"profile-image1\"\r\n            />\r\n            <div className=\"edit-overlay\">\r\n              <label htmlFor=\"image-upload\" className=\"edit-button\">\r\n                Edit Profile Image\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image-upload\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageChange}\r\n                className=\"file-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n          {loading && <p>Uploading image...</p>} {/* Show loading message */}\r\n        </div>\r\n      ) : (\r\n        <p className=\"profile-login-message\">Please log in to see your profile.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}